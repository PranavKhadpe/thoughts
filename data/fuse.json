{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Pranav's thoughts","n":0.707},"1":{"v":"\nThis is the root for your Dendron vault.\n\nIf you decide to publish your entire vault, it will be your landing page. You are free to customize any part of this page except the frontmatter at the top, between the `---`.\n","n":0.158}}},{"i":2,"$":{"0":{"v":"Formula 1","n":0.707}}},{"i":3,"$":{"0":{"v":"Engines as Platforms","n":0.577},"1":{"v":"\n## 'Teams' can be equated to 'chasis constructors'\n\nStarting with the 1981 season, any team competing in the Formula 1 is required to own intellectual property rights to its chasis but intellectual property rights to its engine can be owned by a different entity. So a company that manufactures an engine---an engine constructor---can provide its engine to and be part of mulitple teams but every team has to have a unique chasis constructor. As a result, teams can be thought of as chasis constructors who ultimately compete with each other, each deciding who the right engine provider for them is. This view that advances the chasis constructor as the principal constituent of a team, directly follows from chasis and engine IP ownership requirements, and is also implicit in the [Formula 1 sporting regulations](https://www.fia.com/file/70710/download/23276?token=szOjLZMY), Section 6.3 of which asserts that when a team wins the Constructor Championship, if the constructor of the chassis is not the same as that of the engine, the title will be awarded to the former (the name of the chasis constructor also precedes the name of the engine constructor in the name of the team).\n\n## Customer Teams \n\n\n","n":0.072}}},{"i":4,"$":{"0":{"v":"Getting Started","n":0.707},"1":{"v":"\nDendron is an IDE for general knowledge.\nCombine the simplicity of markdown with the power of a modern development environment.\n\nTo begin, lets do a quick [[overview of the Dendron UI|tutorial.user-interface]]!\n","n":0.186}}},{"i":5,"$":{"0":{"v":"User Interface","n":0.707},"1":{"v":"\nLet's do a brief overview on how to navigate the Dendron User Interace (UI), which is called the **[Workbench](https://wiki.dendron.so/notes/f7ebd4aa-8ba7-4bc5-bd00-a1efc5315f07)**.\n\n> 💡 **TIP:** If you're unfamiliar with VS Code, the [command palette](https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette) is used to quickly run commands, including Dendron commands. To bring up the command palette, use `Ctrl+Shift+P` / `Cmd+Shift+P` and start typing the command. If you see instructions telling you to run a command, remember to bring up the command palette and type the command name to run it.\n\n![Tutorial Dendron Layout Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-layout-2-dark.png)\n\n> 💡 **TIP:** VS Code lets you re-position any of these windows, so feel free to rearrange the windows to work best for you! Refer to [VS Code documentation for more information on the VS Code UI](https://code.visualstudio.com/docs/getstarted/userinterface).\n\n## 1. Editor View\n\nWhere you can write and edit your notes. **Notes** in Dendron are [Markdown](https://wiki.dendron.so/notes/ba97866b-889f-4ac6-86e7-bb2d97f6e376) files (ex. `my.note.md`).\n\n## 2. Preview View\n\nShows the rendered Markdown of your currently opened note. If you close this pane, you can bring it back with the `Dendron: Show Preview` command.\n\nYou may see two additional sections at the bottom of the preview view, **Children** and **Backlinks**, which will be covered later in the tutorial.\n\n> 💡 **TIP:** The preview view is **read-only** and cannot be used to edit notes. All editing must be done in the editor view.\n\n## 3. File Explorer Pane\n\nThis shows the files and folders in your vault. A **[vault](https://wiki.dendron.so/notes/6682fca0-65ed-402c-8634-94cd51463cc4)** stores your notes and assets (ex. images, PDFs, etc.).\n\n> 💡 **TIP:** We encourage using the **[tree view](#6-tree-view-pane)**, as opposed to the file explorer pane, for navigating your notes.\n\n## 4. Outline Pane\n\nShows an outline of the currently opened note by listing the headers for navigation. Jump around areas of larger notes by clicking on the headers in this pane.\n\n## 5. Calendar View Pane\n\nShows days where you've created a **[Details](https://wiki.dendron.so/notes/ogIUqY5VDCJP28G3cAJhd)** entry. If no journal entry exists for a given day, clicking on the date in the calendar will automatically create it.\n\n![Create Daily Journal from Calendar](https://org-dendron-public-assets.s3.amazonaws.com/images/create-daily-journal-calendar.gif)\n\n## 6. Tree View Pane\n\nThis shows a hierarchical view of your notes, similar to how a folder structure would appear in your filesystem. You can click here to navigate around your notes.\n\n![Tree View Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-tree-view-dark.png)\n\n## 7. Backlinks Pane\n\nThis shows a list of other notes that have links to the current note opened in the editor view.\n\n![Backlinks Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-backlinks-dark.png)\n\n## Next Steps\n\n- Next is Tutorial Step 2: [[Taking Notes|tutorial.taking-notes]]\n","n":0.051}}},{"i":6,"$":{"0":{"v":"Taking Notes","n":0.707},"1":{"v":"\n## Access the Lookup Bar\n\nYou can interact with Dendron using the Lookup bar. Use the **Lookup Bar** for both finding notes and creating new notes. Enter `Dendron: Lookup` (`Ctrl+L` / `Cmd+L`) to open the [Lookup Bar](https://wiki.dendron.so/notes/a7c3a810-28c8-4b47-96a6-8156b1524af3).\n\n![Using Lookup to Navigate the Tutorial](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-lookup.gif)\n\n## Create a Note\n\nTo create a note in Dendron, do the following:\n\n1. Enter `Ctrl+L` / `Cmd+L` to open the lookup bar.\n2. Enter a name for your new note. For example, you can type `recipes`\n3. Click **Create New**.\n4. Press **Enter**. A new note titled `recipes.md` is created in the system. You can now add content to the body of your `recipes` note.\n\n> 💡 **TIP:** Enter `Ctrl+Tab` / `Cmd+Tab` shortcut to go back to the previous note that you were viewing.\n\n> 💡 **INFO:** Notes in Dendron are just plaintext [markdown](https://wiki.dendron.so/notes/ba97866b-889f-4ac6-86e7-bb2d97f6e376). Notes:\n>\n> - Live locally on your file system.\n> - Are portable across operating systems and a variety of software.\n> - Make importing/exporting easier, including [publishing your notes to a hosted website](https://wiki.dendron.so/notes/4ushYTDoX0TYQ1FDtGQSg).\n\n## Add metadata information to your Note\n\nThe `---` section at the top of each note is **frontmatter**.\n\nFrontmatter are custom attributes at the top of each Markdown file that are marked by `---`.\nIn Dendron, this is autogenerated when the note is created and used to store metadata about each note.\n\nYou can add metadata information to your note using frontmatter attributes.\n\n> 💡 **TIP:** Keep in mind the following rules while entering the frontmatter attributes to your note.\n>\n> - Don't modify the `id` or `created` attributes.\n> - The `updated` attribute automatically _updates_ whenever you make a new modification to a file.\n> - See **[reserved keys in frontmatter](https://wiki.dendron.so/notes/ffec2853-c0e0-4165-a368-339db12c8e4b)** for more information.\n\n## Create a hierarchy for your Note\n\nDendron organizes your notes into hierarchies. These are `.` (\"dot\" or \"period\") delimited Markdown files.\n\n## Example\n\nBelow is a hypothetical hierarchy for a file tree:\n\n```\n.\n└── project1/\n    ├── designs/\n    │   └── promotion.png\n    ├── paperwork/\n    │   └── legal.md\n    └── tasks/\n        ├── task1.md\n        └── task2.md\n```\n\nThe same hierarchy in Dendron would look like the following:\n\n```\n.\n├── project1.md\n├── project1.designs.md\n├── project1.designs.promotion.md\n├── project1.paperwork.md\n├── project1.paperwork.legal.md\n├── project1.tasks.md\n├── project1.tasks.task1.md\n└── project1.tasks.task2.md\n```\n\nTo create a hierarchy, do the following:\n\n1. Enter `Ctrl+L` / `Cmd+L` to open the lookup bar.\n2. Enter a name with a `.` (\"dot\") delimiter. For example, you can type `recipes.vegetarian` to create a note to store your vegetarian recipes.\n3. Press **Enter**.\n   You've created your first hierarchy!\n\n> 💡 **TIP:** Lookup support tab-autocomplete. Typing `rec` in the Lookup Bar, and hitting `tab` should automatically spell out `recipes`.\n\nClick **Tree View** to see the `vegetarian` note under the `recipes` hierarchy. You can also see the note stored as `recipes.vegetarian.md` in the File Explorer Pane.\n\n**[Hierarchies](https://wiki.dendron.so/notes/f3a41725-c5e5-4851-a6ed-5f541054d409)** in Dendron are created by having a `.` (\"dot\") delimiter in the file name. See [What's with the .'s?](https://wiki.dendron.so/notes/f3a41725-c5e5-4851-a6ed-5f541054d409) for detailed information on how hierarchy works.\n\n### View children Notes\n\nIn the example listed above, **vegetarian** is considered as a child note of **recipes**. When looking at the `recipes` note, the preview view will list `vegetarian` (and any other `recipes.*` notes) at the bottom as **Children.** Children notes can also be seen and navigated via the tree view.\n\n![Children](https://org-dendron-public-assets.s3.amazonaws.com/images/children.png)\n\n### Create a hierarchy at any level\n\nYou can create a hierarchy at any level. For example, type `recipes.italian.desserts.tiramisu` in the lookup bar and press **Enter**.\n\nYou'll see there is a `+` sign next to `italian` and `desserts` when viewing in the lookup or tree view. The plus sign indicates that this note is a stub. A **[stub](https://wiki.dendron.so/notes/c6fd6bc4-7f75-4cbb-8f34-f7b99bfe2d50)** is a placeholder for a note that hasn't been created. Dendron uses stubs to avoid cluttering your file system with empty notes when creating hierarchies.\n\n![Tree View Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-tree-view-dark.png)\n\nFollowing this recipes example, you can create other related notes. Some examples:\n\n```\nrecipes.favorites\nrecipes.italian.appetizers\nrecipes.chinese\nrecipes.chinese.appetizers.wontons\nrecipes.ingredients.favorites\nrecipes.ingredients.shopping-list\n```\n\nRead [Why Dendron uses hierarchies](https://wiki.dendron.so/notes/683740e3-70ce-4a47-a1f4-1f140e80b558) for detailed information on Dendron note structure. Dendron also allows you to change the hierarchy at a later date. Read [Refactoring in Dendron](https://wiki.dendron.so/notes/9MZBqhrijEM4QpZRa5t08) in case you change your mind on how to organize your notes.\n\n## Find your Notes\n\nTo find your notes, do the following:\n\n1. Enter `Ctrl+L` / `Cmd+L` to open the lookup bar.\n2. Enter the name of your note. For example, you can type `vege` to find your `recipes.vegetarian` note.\n3. Press **Enter**. The note is opened.\n\n> 💡 **INFO:** Lookup uses _fuzzy search_, which means you can type out partial queries and still see the results.Entering multiple keywords delimited by space will lookup matching notes regardless of order of the > keywords.\n>\n> - Example: `vege rec` or `rec vege` will match the `recipes.vegetarian` note.\n\n> 💡 **TIP:** Read [Finding Notes](https://wiki.dendron.so/notes/84a0366a-eab5-4862-9bef-360f92a196dc) to understand the different ways of querying the lookup.\n> Most queries can be satisfied using [lookup](https://wiki.dendron.so/notes/84a0366a-eab5-4862-9bef-360f92a196dc), but sometimes you want to do a full text search across the **contents** of your notes. This can be done with `Search: Find in Files` (`Ctrl+Shift+F` / `Cmd+Shift+F`), which leverages VS Code [built-in search](https://code.visualstudio.com/docs/editor/codebasics#_search-across-files) capabilities.\n\n### Meeting Notes\n\nDendron also has a few built-in note types. For example, if you find yourself taking meeting notes often, you can use the `Dendron: Create Meeting Note` command to create a note with a pre-built template for meetings. Try it out!\n\n## Next steps\n\n- Tutorial Step 3: [[Linking Notes|tutorial.linking-notes]]\n","n":0.035}}},{"i":7,"$":{"0":{"v":"Rich Formatting","n":0.707},"1":{"v":"\nDendron extends regular Markdown with additional syntax. This covers everything in [GitHub Flavored Markdown (GFM)](https://github.github.com/gfm/) with additional features that are unique to Dendron. Take a look at some examples in this note to see what's possible. Have the preview view opened (`Dendron: Show Preview`) to see how these will get rendered.\n\n## Markdown Formatting Options\n\nMarkdown tables and basic formatting are made with the following syntax:\n\n```markdown\n| Formatting    |     Example     |\n| :------------ | :-------------: |\n| Bold          | **Hello World** |\n| Italics       |  _Hello World_  |\n| Strikethrough | ~~Hello World~~ |\n```\n\nThe above table becomes rendered as the following, in the preview pane:\n\n| Formatting    |     Example     |\n| :------------ | :-------------: |\n| Bold          | **Hello World** |\n| Italics       |  _Hello World_  |\n| Strikethrough | ~~Hello World~~ |\n\n## Images\n\n> 🌱 **ACTION:** Copy any image onto your clipboard, and then use the `Paste Image` command while focused in your editor pane. This will automatically create a link for you and copy the file contents into the assets directory in your workspace.\n\nSample Image Link: `![Dendron Logo](assets/images/logo_small.png)`\n\nResult:\n\n![Dendron Logo](https://org-dendron-public-assets.s3.amazonaws.com/images/tutorial-logo_small.png)\n\n> 💡 **TIP:** This relies on the **Dendron Paste Image** extension which is installed by default alongside Dendron. For Linux users, you'll need to have [`xclip`](https://opensource.com/article/19/7/xclip) (or [`wl-paste`](https://github.com/bugaevc/wl-clipboard) if using Wayland) installed.\n\n## Equations\n\nMath typesetting can be written through [Katex](https://wiki.dendron.so/notes/b1919663-cc48-4054-b0cf-4b26fe444907.html)\n\n$$\n\\int\\_{-\\infty}^\\infty f(x)dx\n$$\n\n## Diagrams\n\nVarious types of diagrams are supported with the [mermaid](https://mermaid-js.github.io/mermaid/#/) visualization syntax.\n\n### Flow Charts\n\n````\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n```\n````\n\n<div class=\"mermaid\">\n  graph TD;\n    A-->B;\n    A-->C;\n</div>\n\n### Sequence Diagrams\n\n````\n```mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n```\n````\n\n<div class=\"mermaid\">\n  sequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n</div>\n\n## Code Blocks\n\nMarkdown provides a way to render syntax highlighting and formatting of code.\n\n```python\n# Whoa, I'm doing math in Python\nresult = 2 + 2\nprint(result)\n```\n\nThe above code is in python. Both the editor view and preview view should show some syntactical flavor to the code block. You can also have code blocks with or without designated language markers.\n\n```bash\n# Whoa, this is a code block explicitly\n## stating it is in bash!\necho \"This is a bash example!\"\nps -ef | grep codium\n```\n\nNotice how `bash` is used on the first line of the code block, and `python` on the previous code block. If missing a language marker, code blocks look like this:\n\n```\n# Whoa, this is still bash, but without\n## it explicitly stated on the first line!\necho \"This is a bash example!\"\nps -ef | grep codium\n```\n\n## Note References\n\n**[Note References](https://wiki.dendron.so/notes/f1af56bb-db27-47ae-8406-61a98de6c78c)** are unique to Dendron. You can embed a section of a different note, and have the content in-lined into the current note.\n\n> 🌱 **ACTION:** Create `[[recipes.favorites]]`, if you haven't yet. We're going to add some content in here to reuse as a note reference!\n\nAdd the following contents to `[[recipes.favorites]]`:\n\n```markdown\nMy favorite recipes, by far. I must avoid.\n\n- [[recipes.italian.desserts.tiramisu]]\n- [[Chinese Wontons|recipes.chinese.appetizers.wontons]]\n```\n\nIn `[[recipes]]`, add the following contents:\n\n```markdown\n## Favorites\n\n![[recipes.favorites]]\n```\n\nAfter completing the above, remove the surrounding backticks from the following and look in the preview view to see how this renders:\n\n`![[recipes.favorites]]`\n\n> 💡 **TIP:** Note references can get more fine-grained, targeting headers, sections, or blocks of text. You can learn more from the docs in [Note References](https://wiki.dendron.so/notes/f1af56bb-db27-47ae-8406-61a98de6c78c).\n\n## Next Steps\n\n- [[Conclude the Tutorial|tutorial.conclusion]]\n","n":0.044}}},{"i":8,"$":{"0":{"v":"Linking Notes","n":0.707},"1":{"v":"\n## Links\n\nDendron helps you create links between notes. These links help you organically discover relationships and build out your knowledge graph.\n\n> 🌱 **ACTION:** To create a link, start typing `[[` and Dendron will show you a list of notes in your workspace that you can link to. Let's go with `[[recipes.vegetarian]]`. Try it in the editor view, now.\n\n- Example (remember to remove the surrounding backticks): `[[recipes.vegetarian]]`\n\nTo navigate to the note in the link, click the link in the preview view. In the editor pane, move the cursor into the link and hit `Ctrl+Enter`. You might wonder what will happen if the note doesn't exist: it will create the note!\n\nYou can switch back to the previous note with the tab switching shortcut: `Ctrl+Tab` on most systems.\n\n> 💡 **TIP:** When you create a wikilink, Dendron automatically registers the link as a **backlink** for the destination note. These appear in the [Backlinks Pane](https://wiki.dendron.so/notes/gHdxXlNMr1w4xqee0n-Mb) when the destination note is open. For more information on backlinks:\n>\n> - [Links: Backlinks](https://wiki.dendron.so/notes/3472226a-ff3c-432d-bf5d-10926f39f6c2)\n> - [Workbench: Backlinks Panel](https://wiki.dendron.so/notes/f7ebd4aa-8ba7-4bc5-bd00-a1efc5315f07)\n\n### Link to headers\n\n> 🌱 **ACTION:** You need headers to link to for this, so add an `## Ingredients` section to `[[recipes.italian.desserts.tiramisu]]`. Try it in the editor view. Then:\n>\n> - Create `[[recipes.ingredients.shopping-list]]` if it doesn't already exist\n> - Add `[[Tiramisu Ingredients|recipes.italian.desserts.tiramisu#ingredients]]` to `[[recipes.ingredients.shopping-list]]`\n\nThe `#ingredients` at the end will link directly to the header `## Ingredients`. A shortcut to grabbing the link is to place the cursor in the `## Ingredients` header, then run the command `Dendron: Copy Note Link` (`Ctrl+Shift+C` / `Cmd+Shift+C`). That will copy the link to the clipboard, allowing you to paste in other notes.\n\n> 💡 **TIP:** Notice how these links use custom link titles, like **Tiramisu Ingredients**. This is called a **labelled wikilink**: `[[label|your.note.to.link]]`. If a label isn't used, either the `title` attribute from the frontmatter, or the title of the header you are linking to, is used.\n\n## Explore Your Knowledge Graph\n\n> 🌱 **ACTION:** To get a visual representation of your notes, use the `Dendron: Show Note Graph` command.\n\nThis is the **[graph view](https://wiki.dendron.so/notes/587e6d62-3c5b-49b0-aedc-02f62f0448e6)**. You can explore the hierarchical organization of your notes and how they are linked together. We're continually working to improve this feature so keep on the lookout for new capabilities in the note graph view in the future!\n\n#### Local Note Graph\n\nShows a graph of your current note and immediate neighbors. This is the default view when you run [Show Note Graph](https://wiki.dendron.so/notes/587e6d62-3c5b-49b0-aedc-02f62f0448e6).\n\n![Local Note Graph Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/graph-view-local-dark.png)\n\n#### Full Note Graph\n\nShow graph of all your notes. You can activate this by using the [Show Note Graph Command](https://wiki.dendron.so/notes/587e6d62-3c5b-49b0-aedc-02f62f0448e6) command and toggling the [Show Note Graph](https://wiki.dendron.so/notes/587e6d62-3c5b-49b0-aedc-02f62f0448e6) option.\n\n![Full Note Graph Dark](https://org-dendron-public-assets.s3.amazonaws.com/images/graph-view-full-dark.png)\n\n## Refactoring in Dendron\n\nYou may wonder what happens to your links if you want to change the name of a note or header. Dendron keeps this in mind and provides commands to update your notes. All the while, Dendron updates any and all wikilinks in your notes.\n\n### Rename Note\n\nThe [Rename Note](https://wiki.dendron.so/notes/srajljj10V2dl19nCSFiC) command is used to change the name of, and all links to, a single note.\n\n> 🌱 **ACTION:** Use the lookup to navigate to `[[recipes.italian.desserts.tiramisu]]`. Then:\n>\n> - Run the command `Dendron: Rename Note` to change the title to `[[recipes.italian.desserts.gelato]]`.\n> - Use the lookup to navigate to `[[recipes.ingredients.shopping-list]]`. You should see the wikilink there has updated from `[[recipes.italian.desserts.tiramisu#ingredients]]` to `[[recipes.italian.desserts.gelato#ingredients]]`, ensuring links are updated!\n\n### Rename Header\n\nThe [Rename Header](https://wiki.dendron.so/notes/srajljj10V2dl19nCSFiC) command is used to change the name of, and all links to, a single header.\n\n> 🌱 **ACTION:** Use the lookup to navigate to `[[recipes.italian.desserts.gelato]]`. Then:\n>\n> - Place the cursor in `## Ingredients`, and run the command `Dendron: Rename Header`\n> - Rename the header to `## Best Ingredients`\n> - Use the lookup to navigate to `[[recipes.ingredients.shopping-list]]`. You should see the wikilink there has updated from `[[recipes.italian.desserts.gelato#ingredients]]` to `[[recipes.italian.desserts.gelato#best-ingredients]]`, ensuring links are updated!\n\nIf you want to migrate a section beneath a certain header to a different note entirely, [Move Header](https://wiki.dendron.so/notes/srajljj10V2dl19nCSFiC) will do the job and ensure links are updated.\n\n### Refactor Hierarchy\n\nThe [Refactor Hierarchy](https://wiki.dendron.so/notes/srajljj10V2dl19nCSFiC) command is used to change the name of, and all links to, a collection of notes.\n\n> 🌱 **ACTION:** This section will be all about creating and refactoring notes, in order to get an idea for how it all works.\n\n- Create the following notes by placing the cursor inside each, and pressing `Ctrl+Enter`:\n  - `[[recipes.vegetarian.tikka-masala]]`\n  - `[[recipes.vegetarian.aloo-paratha]]`\n  - `[[recipes.vegetarian.dosa]]`\n- Each of these are Indian food! Let's move them into the `indian` hierarchy.\n  - Run the command `Dendron: Refactor Hierarchy`\n  - At the first prompt, enter `recipes.vegetarian` (note hierarchy you are targeting)\n  - At the second prompt, enter `recipes.indian` (renaming the targeted hierarchy)\n\nA refactor preview should be provided, before making the change, to confirm the changes you are about to make.\n\n![Refactor Hierarchy Preview prompt](https://org-dendron-public-assets.s3.amazonaws.com/images/refactor-hierarchy-preview-prompt.png)\n\nThis will change all of the targeted notes:\n\n```\nrecipes.vegetarian.md               -->\trecipes.indian.md\nrecipes.vegetarian.tikka-masala.md  -->\trecipes.indian.tikka-masala.md\nrecipes.vegetarian.aloo-paratha.md  -->\trecipes.indian.aloo-paratha.md\nrecipes.vegetarian.dosa.md          -->\trecipes.indian.dosa.md\n```\n\nSelecting `Proceed` renames all the notes! There's no need to worry about any broken links throughout your notes, as those are updated by `Refactor Hierarchy`, too.\n\n> 💡 **TIP:** We could have chosen to move them all to `[[recipes.indian.vegetarian]]`, too, if wanting to add `vegetarian` to recipe hierarchies. Doing this would make it easy to do a lookup against all vegetarian recipes with `recipes. vegetarian`. Another alternative is to take a look at using [Tags](https://wiki.dendron.so/notes/8bc9b3f1-8508-4d3a-a2de-be9f12ef1821).\n\n## Next Steps\n\n- Tutorial Step 4: [[Rich Formatting|tutorial.rich-formatting]]\n","n":0.034}}},{"i":9,"$":{"0":{"v":"Conclusion","n":1},"1":{"v":"\n**Congratulations!** You've completed the Dendron Tutorial 🙌.\n\nWith fast lookup, flexible hierarchies, note linking, and rich formatting, you're now ready to organize, reference, and work with any amount of knowledge.\n\nFrom here, you can start adding your notes to this workspace or, if you'd like to start fresh, you can create a new workspace for your notes with the `Dendron: Initialize Workspace` Command.\n\n## Join the Dendron Community\n\nDendron wouldn't be what it is today without our wonderful set of members and supporters.\n\n## Community Calendar\n\nWe have a bunch of community events that we host both weekly and monthly. You can stay up to date on whats happening by taking a look at our community calendar!\n\n- View and register for upcoming [Dendron Community Events on Luma](https://link.dendron.so/luma)\n\n## Dendron Newsletter\n\n- [Subscribe to the Dendron Newsletter](https://link.dendron.so/newsletter)\n\nDendron sends out a weekly newsletter highlighting:\n\n- Latest release features\n- Latest [Dendron blog](https://blog.dendron.so) posts\n- Insights from the [Dendron Discord](https://link.dendron.so/discord) community\n- RFC updates and [GitHub discussions](https://link.dendron.so/6WvK)\n- and more!\n\n## Join other Dendrologists\n\nThere are a variety of ways to connect with Dendron devs, contributors, and other members of the Dendron community:\n\n- Join the [Dendron on Discord](https://link.dendron.so/discord)\n- Follow [Dendron on Twitter (`@dendronhq`)](https://link.dendron.so/twitter)\n- Checkout [Dendron on GitHub](https://link.dendron.so/github)\n- Read the [Dendron Blog](https://blog.dendron.so/)\n- Subscribe to the [Dendron Newsletter](https://link.dendron.so/newsletter)\n\n##\n\nCheck out our [Case Studies](https://wiki.dendron.so/notes/34ee4bcf-60e9-4031-a4c0-26113b5acb80) and [Workflows](https://wiki.dendron.so/notes/9313b845-d9bf-42c9-aad1-0da34794ce26) to see more ways Dendron is being used to organize knowledge.\n\n## Publishing\n\nDendron isn't just for taking notes. It can be used to share your thoughts and documentation with others. One of those ways is with **publishing**. The [Dendron Documentation](https://wiki.dendron.so) and [Dendron Blog](https://blog.dendron.so) are both published this way.\n\nIf you want to learn more about [publishing your notes online](https://wiki.dendron.so/notes/e5st4LFLtIwwbQmC6JBaF), you can take a look at how to publish with example guides for [Netlify](https://wiki.dendron.so/notes/yetuum6o9wZi6eVJQBbQb) or [GitHub Pages](https://wiki.dendron.so/notes/yg3EL1x9fEe4NMqxUC3jP).\n\n![A Preview of Next.js Publishing](https://org-dendron-public-assets.s3.amazonaws.com/images/dendron-nextjs-published.gif)\n\n## Explore the full potential of Dendron\n\nThere is much more that Dendron offers. When you're ready, learn more about our additional features.\n\n### Trail\n\n_This is your immediate jumping off point after finishing the tutorial. It covers useful concepts that we didn't have time to cover in the basic tutorial._\n\n- Basics\n  - [x] Learn the basics of Dendron with the [Getting Started tutorial](https://wiki.dendron.so/notes/678c77d9-ef2c-4537-97b5-64556d6337f1).\n  - [ ] Read up on the [Amoeba Workflow](https://wiki.dendron.so/notes/e780000d-c784-4945-8e42-35218a3ecf10) - a highly effective way of taking notes in Dendron\n- Navigation\n  - Learn how to [find all note references to a header](https://wiki.dendron.so/notes/cphUwSPk12j4lS0tKjBdC).\n  - Learn how to [find all broken, internal reference links](https://wiki.dendron.so/notes/ZeC74FYVECsf9bpyngVMU).\n  - Learn how to navigate between notes using [navigation commands](https://wiki.dendron.so/notes/cphUwSPk12j4lS0tKjBdC).\n- Organizing\n  - Learn to expand your organization beyond hierarchies by [using tags](https://wiki.dendron.so/notes/8bc9b3f1-8508-4d3a-a2de-be9f12ef1821).\n  - Learn how to [tag other Users](https://wiki.dendron.so/notes/ESqOqSOEo54lqvGLlQXM6) in your notes.\n  - Learn how to [manage and track tasks with special Task Notes](https://wiki.dendron.so/notes/SEASewZSteDK7ry1AshNG).\n  - Learn how to quickly take notes that may note have a home quite yet, like a scratchpad, using [Scratch Notes](https://wiki.dendron.so/notes/5c213aa6-e4ba-49e8-85c5-1bdcb33ce202).\n  - Learn how to log your activities with [Daily Journal Notes](https://wiki.dendron.so/notes/ogIUqY5VDCJP28G3cAJhd) and other generic [Journal Notes](https://wiki.dendron.so/notes/5c213aa6-e4ba-49e8-85c5-1bdcb33ce202).\n  - Learn the _how_ and the _why_ behind [Hierarchies in Dendron](https://wiki.dendron.so/notes/f3a41725-c5e5-4851-a6ed-5f541054d409).\n  - Learn how to automatically make use of [Templates](https://wiki.dendron.so/notes/861cbdf8-102e-4633-9933-1f3d74df53d2) in new notes, in specific hierarchies, with [Schemas](https://wiki.dendron.so/notes/c5e5adde-5459-409b-b34d-a0d75cbb1052).\n- Sharing\n  - Learn how to backup your vaults online, privately or accessible to the public, with [git and GitHub](https://wiki.dendron.so/notes/vsAxYld4zsbD2XjKoh7OP).\n  - Learn about popular VS Code extensions, helpful tools, and other resources from the Dendron community from [`awesome-dendron`](https://github.com/dendronhq/awesome-dendron/).\n\n### Forest\n\n_Here we go a level deeper by going over intermediate topics. Wander through here to learn how to customize Dendron for your workflow._\n\n- Retrieval\n  - Learn how to customize the power and functionality of your lookups with [Lookup Modifiers](https://wiki.dendron.so/notes/ad270a7d-2aed-4273-8319-eb6536e38b29).\n- Editing\n  - Learn how to understand and extend the metadata of your notes with [Frontmatter Attributes](https://wiki.dendron.so/notes/ffec2853-c0e0-4165-a368-339db12c8e4b).\n- Organizing\n  - Learn how to [manage and understand different kinds of Vaults](https://wiki.dendron.so/notes/6682fca0-65ed-402c-8634-94cd51463cc4).\n  - Learn how to [manage and understand different kinds of Workspaces](https://wiki.dendron.so/notes/c4cf5519-f7c2-4a23-b93b-1c9a02880f6b).\n  - Learn how to work with [Multiple Vaults in the same workspace](https://wiki.dendron.so/notes/24b176f1-685d-44e1-a1b0-1704b1a92ca0). This allows you to access private personal notes from a vault, while working with notes from other vaults (like team notes, or software documentation in a project repository).\n- Sharing\n  - Learn how to [publish your notes online](https://wiki.dendron.so/notes/e5st4LFLtIwwbQmC6JBaF), and follow guides for hosting with [Netlify](https://wiki.dendron.so/notes/yetuum6o9wZi6eVJQBbQb) or [GitHub Pages](https://wiki.dendron.so/notes/yg3EL1x9fEe4NMqxUC3jP).\n  - Learn how to [access your Dendron notes on mobile devices with third-party software](https://wiki.dendron.so/notes/401c5889-20ae-4b3a-8468-269def4b4865).\n- Transfer\n  - Learn how to use Dendron interoperably with other formats, by [exporting/importing your notes with Pods](https://wiki.dendron.so/notes/66727a39-d0a7-449b-a10d-f6c438185d7f).\n\n### Wilderness\n\n_This is for people that want to explore the cutting edge. Explore here to master advanced functionality in Dendron._\n\n- Sharing\n  - Learn the [best practices and guidance on using Dendron collaboratively with Teams](https://wiki.dendron.so/notes/98f6d928-3f61-49fb-9c9e-70c27d25f838).\n- Extending\n  - Learn how to [access the API and the extend the power of Dendron's capabilities, with Hooks](https://wiki.dendron.so/notes/12551d19-04c2-4d26-ac1e-d23ff3181a9c).\n  - Visit and comment on new feature and design ideas, for Dendron, with our [Request For Comments (RFCs)](https://docs.dendron.so/notes/f143ca38-dcc6-4cd3-b84b-997aec1160ef/) in our [GitHub Discussions](https://github.com/dendronhq/dendron/discussions).\n","n":0.036}}},{"i":10,"$":{"0":{"v":"Social Software the Hard Parts","n":0.447},"1":{"v":"\n## Communicating organizational practices\n\n## Deploying software in groups\n\n## Federating groups of users to deploy software\n","n":0.258}}},{"i":11,"$":{"0":{"v":"Platforms Thinking","n":0.707},"1":{"v":"[Teams vs Slack](https://twitter.com/stewart/status/793811616760496128/photo/1)\n\n- create a js module that allows you to collect analytics on how people engineer prompts\n- interfaces will change; it likely won't just be APIs and model weights- [Here](https://arxiv.org/abs/2109.01652)\n","n":0.18}}},{"i":12,"$":{"0":{"v":"Open Source","n":0.707},"1":{"v":"Re: mobilization of networks around technologies: [this paper](https://dl.acm.org/doi/pdf/10.1145/3025453.3026056)\n\n> Build a big business on top of and around a successful platform by adding something of your own that is both substantial and differentiated. Take, for example, our national road and highway system. If you view it as the transportation platform, you start to see the host of highly differentiated businesses that have been built on top of it, ranging from FedEx to Tesla. The ridesharing service Lyft is building its business on top of that same transportation platform, as well as Amazon’s AWS platform.\n\n## Cross-sectional Perspective versus Longitudinal Perspective\n\nCross-sectional: A sponsored open-source community is heterogenous and consists of developers within the sponsoring firm, developers outside the sponsoring firm, and users. Firms need to figure out ways to indirectly influence the community since community members outside the boundaries of the firm are not bound by contractual relationships. As such, firms use their employees as a means of injecting their influence into a project, providing firms with a mechanism of indirect control. [How do firms influence open source software communities? A framework and empirical analysis of different governance modes](https://reader.elsevier.com/reader/sd/pii/S1471772715000111?token=D094A183B8CCBFBF8CA85E63665C958758C014ED78A996947FC05BA5139B99E9A6FB6AA44DABC5828E6F927ED8438E45&originRegion=us-east-1&originCreation=20220613145756)\n \nLongitudinal: If the community is initiated by members of the firm,at initiation the power is concentrated in the firm--- the only members of the community are its employees. As newcomers join the community, the power-sharing chocies of the firm decide the degree to which power is shared with external members. It is possible that people outside the firm are permanently relegated to the periphery.\n\n## Do firms engage in open-source for innovation?\n\n## Does our digital infrastructure really rely on Open Source Software?\n\nOne interviewee pointed out that large companies like Google/FB don't actually just use open source packages that easily. Can we quantify exactly how much open source software gets used?\n\n## Are programs like GSoC a net negative to organizations that `shepherd' contributions for people that never return?\n\n## Measuring software modularity and understanding how firms retain control\n\nHerbert Simon famously said, “Every problem-solving effort must begin with creating a\nrepresentation for the problem” and “solving a problem simply means representing it so as to make\nthe solution transparent” (Simon, 1996, pp. 108 and 132). In other words, good representations can\nhelp illuminate important dimensions of a problem.\n\nUsing something like [fractal figures](https://www.researchgate.net/publication/249607047_Analysing_Software_Repositories_to_Understand_Software_Evolution) to understand where firms retain control?\n\nOther examples:\n[Comparing Repositories Visually with RepoGrams](https://dl.acm.org/doi/pdf/10.1145/2901739.2901768)\n\n[Visualization of CVS repository information](https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=4023993)\n\n\n\n## Critique of liberalism from within liberalism\nIntellectual property rights and free speech are both strains of liberalism but the open source movement rejects IP rights while embracing free speech. Read [Coding Freedoms](https://gabriellacoleman.org/Coleman-Coding-Freedom.pdf)","n":0.049}}},{"i":13,"$":{"0":{"v":"Programs as Lossy Representations","n":0.5},"1":{"v":"## Programs as knowledge building\n\n\n## Contributors to public goods obtain private benefits that are tied to the development of that good\n\nTrying to link to something \n> yo\n","n":0.192}}},{"i":14,"$":{"0":{"v":"Benefits of Community","n":0.577},"1":{"v":"stub\n","n":1}}},{"i":15,"$":{"0":{"v":"CPRM-problems","n":1}}},{"i":16,"$":{"0":{"v":"Microgrants","n":1},"1":{"v":"Differences between Patreon, Microgrants and Microlending platforms like Kiva?\n\n[This paper by Diyi](https://dl.acm.org/doi/pdf/10.1145/3359235).\n","n":0.289}}}]}
